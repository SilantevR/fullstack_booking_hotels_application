version: "3.9"
services:
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.10
    # Enables the web UI and tells Traefik to listen to docker
    container_name: traefik
    network_mode: "host"
    command:
      - "--api.insecure=true"
      - "--providers.docker"
      - "--providers.docker.exposedByDefault=false"
      - "--providers.docker.network=host"
      - "--entrypoints.http.address=:80"
      #     - "--entrypoints.http.http.redirections.entrypoint.to=https"
      #     - "--entrypoints.http.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.https.address=:443"
      - "--log.level=DEBUG"
      # # Let'sEncrypt
      # - "--entrypoints.https.http.tls.certResolver=le"
      # - "--certificatesresolvers.le.acme.tlschallenge=true"
      # - "--certificatesresolvers.le.acme.email=you@mail.net"
      # - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock

  client:
    container_name: app-client
    image: app-client
    network_mode: "host"
    labels:
      - "traefik.port=3000"
      - "traefik.enable=true"
      - "traefik.http.routers.client.rule=Host(`diplomproject.duckdns.org`)"
      - "traefik.http.routers.client.entrypoints=http"
    build:
      context: .
      dockerfile: Dockerfile.client
      args:
        VITE_BASE_URL: ${VITE_BASE_URL}
        VITE_PUBLIC_URL: ${VITE_PUBLIC_URL}
        VITE_SOKET_URL: ${VITE_SOKET_URL}
    restart: always

  server:
    container_name: app-server
    image: app-server
    network_mode: "host"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.server.rule=Host(`diplomproject.duckdns.org/api`)"
    volumes:
      - "/home/ubuntu/public:/app/public"
    build:
      context: .
      dockerfile: Dockerfile.server
      args:
        SERVER_PORT: ${SERVER_PORT}
        MONGODB_URL: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@127.0.0.1:27017/admin
        JWT_SECRET: ${JWT_SECRET}
        JWT_TOKEN_AUDIENCE: ${JWT_TOKEN_AUDIENCE}
        JWT_TOKEN_ISSUER: ${JWT_TOKEN_ISSUER}
        JWT_ACCESS_TOKEN_TTL: ${JWT_ACCESS_TOKEN_TTL}
        JWT_REFRESH_TOKEN_TTL: ${JWT_REFRESH_TOKEN_TTL}
        REQUEST_USER_KEY: ${REQUEST_USER_KEY}
        SOKET_ORIGIN: ${SOKET_ORIGIN}
        DOMAIN: ${DOMAIN}
    restart: always
    depends_on:
      mongo:
        condition: service_healthy

  mongo:
    image: mongo
    container_name: app-db
    restart: always
    volumes:
      - "/home/ubuntu/mongo/db:/data/db"
      - "/home/ubuntu/s3cloud:/home/root/backup"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - "127.0.0.1:27017:27017"
    healthcheck:
      test: "exit 0"
