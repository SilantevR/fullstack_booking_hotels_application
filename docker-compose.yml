version: "3.9"
services:
  nginx:
    container_name: app-nginx
    image: nginx
    network_mode: "host"
    restart: always
    volumes:
      - "/home/ubuntu/nginx/nginx.conf:/etc/nginx/nginx.conf"
      - "/home/ubuntu/certbot/conf:/etc/letsencrypt"
      - "/home/ubuntu/certbot/var:/var/lib/letsencrypt"
      - "/home/ubuntu/certbot/web-root:/usr/share/nginx/html"
      - "/home/ubuntu/certbot/dhparam:/etc/ssl/certs"
      - "/home/ubuntu/public:/home/root/public"

  certbot:
    container_name: app-certbot
    image: certbot/certbot
    depends_on:
      - nginx
    volumes:
      - "/home/ubuntu/certbot/conf:/etc/letsencrypt"
      - "/home/ubuntu/certbot/var:/var/lib/letsencrypt"
      - "/home/ubuntu/certbot/web-root:/usr/share/nginx/html"
    command: certonly --webroot --webroot-path=/usr/share/nginx/html --email ${EMAIL} --agree-tos --no-eff-email --force-renewal -d ${DOMAIN} -d www.${DOMAIN}

  client:
    container_name: app-client
    image: app-client
    network_mode: "host"
    volumes:
      - "/home/ubuntu/nginx/client/nginx.conf:/etc/nginx/nginx.conf"
      - "/home/ubuntu/public:/usr/share/nginx/html/public"
    build:
      context: .
      dockerfile: Dockerfile.client
      args:
        VITE_BASE_URL: ${VITE_BASE_URL}
        VITE_PUBLIC_URL: ${VITE_PUBLIC_URL}
        VITE_SOKET_URL: ${VITE_SOKET_URL}
    restart: always

  server:
    container_name: app-server
    image: app-server
    network_mode: "host"
    volumes:
      - "/home/ubuntu/public:/app/public"
    build:
      context: .
      dockerfile: Dockerfile.server
      args:
        SERVER_PORT: ${SERVER_PORT}
        MONGODB_URL: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@127.0.0.1:27017/admin
        JWT_SECRET: ${JWT_SECRET}
        JWT_TOKEN_AUDIENCE: ${JWT_TOKEN_AUDIENCE}
        JWT_TOKEN_ISSUER: ${JWT_TOKEN_ISSUER}
        JWT_ACCESS_TOKEN_TTL: ${JWT_ACCESS_TOKEN_TTL}
        JWT_REFRESH_TOKEN_TTL: ${JWT_REFRESH_TOKEN_TTL}
        REQUEST_USER_KEY: ${REQUEST_USER_KEY}
        SOKET_ORIGIN: ${SOKET_ORIGIN}
        DOMAIN: ${DOMAIN}
    restart: always
    depends_on:
      mongo:
        condition: service_healthy

  mongo:
    image: mongo
    container_name: app-db
    restart: always
    volumes:
      - "/home/ubuntu/mongo/db:/data/db"
      - "/home/ubuntu/s3cloud:/home/root/backup"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - "127.0.0.1:27017:27017"
    healthcheck:
      test: "exit 0"
