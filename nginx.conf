worker_processes auto;
events {
    worker_connections  1024;
}

http {
    include mime.types;
    sendfile        on;
    server_tokens   off;
    server {
        root /usr/share/nginx/html;
        default_type application/octet-stream;
        listen                  443 ssl http2;
        listen                  [::]:443 ssl http2;
        server_name             diplomproject.duckdns.org;
        # SSL
        ssl_certificate         /etc/letsencrypt/live/diplomproject.duckdns.org/fullchain.pem;
        ssl_certificate_key     /etc/letsencrypt/live/diplomproject.duckdns.org/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/diplomproject.duckdns.org/chain.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
        gzip on;
        gzip_min_length 100;
        gzip_comp_level 3;
        gzip_types text/html;
        gzip_types text/css;
        gzip_types application/javascript;
        gzip_types image/jpg;

        gzip_disable "msi6";
        # reverse proxy
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
        }

        location ~* \.(css|js) {
            root /usr/share/nginx/html;
            try_files $uri $uri/;
            access_log off;
            expires 1M;
            add_header Pragma public;
            add_header Cache-Control public;
            add_header Vary Accept-Encoding;
        }

        location ^~ /api/ {
            proxy_set_header      Host $host;
            proxy_set_header      X-Real-IP $http_x_real_ip;
            proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass            http://127.0.0.1:5000;
            proxy_set_header      X-Forwarded-Proto $scheme;
            proxy_set_header      Cache-Control no-cache;
            default_type  application/json;
            proxy_http_version 1.1;
            client_max_body_size  128m;
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods 'GET, POST, PUT, OPTIONS, DELETE';
            add_header Access-Control-Allow-Headers 'Origin, X-Requested-With, Content-Type, Accept';
            add_header Access-Control-Allow-Credentials 'true';
            add_header X-App-Host $host;
            add_header            Last-Modified $date_gmt;
            add_header            Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age = 0';
            if_modified_since     off;
            expires               off;
            etag                  off;
        }

        location ^~ /socket.io/{
            proxy_pass            http://127.0.0.1:5000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        location ^~ /public/ {
            proxy_set_header      Host $host;
            proxy_set_header      X-Real-IP $http_x_real_ip;
            proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass            http://127.0.0.1:5000;
            proxy_set_header      X-Forwarded-Proto $scheme;
            proxy_set_header      Cache-Control no-cache;
            default_type  application/json;
            proxy_http_version 1.1;
            client_max_body_size  128m;
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods 'GET, POST, PUT, OPTIONS, DELETE';
            add_header Access-Control-Allow-Headers 'Origin, X-Requested-With, Content-Type, Accept';
            add_header Access-Control-Allow-Credentials 'true';
            add_header X-App-Host $host;
            add_header            Last-Modified $date_gmt;
            expires 1M;
            add_header Pragma public;
            add_header Cache-Control public;
            add_header Vary Accept-Encoding;
        }
    }

    # subdomains redirect
    server {
        listen                  443 ssl http2;
        listen                  [::]:443 ssl http2;
        server_name             *.diplomproject.duckdns.org;
        # SSL
        ssl_certificate         /etc/letsencrypt/live/diplomproject.duckdns.org/fullchain.pem;
        ssl_certificate_key     /etc/letsencrypt/live/diplomproject.duckdns.org/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/diplomproject.duckdns.org/chain.pem;
        return                  301 https://diplomproject.duckdns.org$request_uri;
    }

    # HTTP redirect
    server {
        listen      80;
        listen      [::]:80;
        server_name diplomproject.duckdns.org *.diplomproject.duckdns.org;
        
        location / {
            return 301 https://$host$request_uri;

#for first start without SSL if static    root /usr/share/nginx/html;
#for first start without SSL if static    index index.html;
#for first start without SSL if static    try_files $uri $uri/ /index.html;

#for first start without SSL if reverse proxy              proxy_pass http://127.0.0.1:3000;
#for first start without SSL if reverse proxy              proxy_http_version 1.1;
#for first start without SSL if reverse proxy              proxy_set_header Upgrade $http_upgrade;
#for first start without SSL if reverse proxy              proxy_set_header Connection 'upgrade';
#for first start without SSL if reverse proxy              proxy_set_header Host $host;
#for first start without SSL if reverse proxy              proxy_cache_bypass $http_upgrade;
        }

        location ~ /.well-known/acme-challenge/ {
            allow all;
            root /usr/share/nginx/html/certbot;
        }

    }

}